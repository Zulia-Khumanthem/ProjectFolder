@startuml

' Interfaces
interface Eat{
    +eat()
}
interface Fly{
    +fly()
}
interface SaySomething{
    +saySomething()
}
interface FlyingBehaviour {
    +flyingBehaviour()
}


' Abstract/Base class
class Bird {
    -String name
    -String color
    -int weight

    +getName(): String
    +getColor(): String
    +getWeight(): float
    +setName(name: String)
    +setColor(color: String)
    +setWeight(weight: float)
}

' Subclass
class Crow {
    -String color
    +getColor(): String
    +eat()
    +getCode(): String
    +saySomething()
}
class Dolphin {
    +eat()
    +saySomething()
}

class Eagle {
    +eat()
    +fly()
    +saySomething()
}

class Pigeon {
    -flyingBehaviour FlyingBehaviour
    +fly()
}

class Sparrow {
    +eat()
    +fly()
}
class CrowEagleFlyingBehaviour {
    +flyingBehaviour()
}

class PigeonSparrowFlyingBehaviour {
    +flyingBehaviour()
}
' Inheritance
Crow --|> Bird
Dolphin --|> Bird
Eagle --|> Bird
Sparrow --|> Bird
Pigeon --|> Bird


' Implements
Crow ..|> Eat
Crow ..|> Fly
Crow ..|> SaySomething

Dolphin ..|> Eat
Dolphin ..|> SaySomething

Eagle ..|> Eat
Eagle ..|> Fly
Eagle ..|> SaySomething

Pigeon ..|> Fly
Sparrow ..|> Eat
Sparrow ..|> Fly

CrowEagleFlyingBehaviour ..|> FlyingBehaviour
PigeonSparrowFlyingBehaviour ..|> FlyingBehaviour


@enduml